name: CI Assignment 6

on:
  pull_request:
    types:
      - synchronize
      - opened
      - reopened
    paths:
      - "packages/assignment-6/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: latest

      - name: Install Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: job1 run build
        run: pnpm -F assignment-6 build > error.log 2>&1

      - name: job1 error comment
        if: failure()
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{secrets.TOKEN_FOR_CI}}
          script: |
            const fs = require('fs')
            const errorLog = fs.readFileSync('error.log', 'utf8')
            const message = `## Build Error\n\n${errorLog}`
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            })

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Run ESLint
        run: |
          pnpm -F assignment-6 lint > eslint_report.txt
        continue-on-error: true
      - name: Check ESLint results
        id: check_eslint
        run: |
          if grep -q 'error' eslint_report.txt; then
            echo "eslint_errors=true" >> $GITHUB_ENV
          else
            echo "eslint_errors=false" >> $GITHUB_ENV
          fi
      - name: Comment on ESLint results
        if: env.eslint_errors == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN_FOR_CI }}
          script: |
            const fs = require('fs');
            const eslintReport = fs.readFileSync('eslint_report.txt', 'utf8');
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              ## ESLint Results
              ${eslintReport}
              `
            });

  test:
    runs-on: ubuntu-latest
    steps:
      - name: job3 구현
        run: echo "job3의 내용을 구현해주세요"

  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: job4 구현
        run: echo "job4의 내용을 구현해주세요"

  assign_reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: job5 구현
        run: echo "job5의 내용을 구현해주세요"
